_4gpi-nm-helper()
{
	local cmds=(
		'set'
		'show'
		'clear'
	)
	local exts=(
		'version'
		'help'
	)
	local opts=(
		'apn'
		'user'
		'password'
		'pdp'
	)
	local pdp_types=(
		'IP'
		'IPV6'
		'IPV4V6'
	)
	local auth_types=(
		'0'
		'1'
		'2'
		'3'
	)
	local cur prev words cword
	_init_completion || return

	if [ $cword -eq 1 ]
	then
		COMPREPLY=( $(compgen -W '${cmds[@]} ${exts[@]}' -- $cur) )
		return
	fi

	case $prev in
	set|show|clear)
		COMPREPLY=( $(compgen -W 'default' -- $cur) )
		;;
	pdp)
		COMPREPLY=( $(compgen -W '${pdp_types[@]}' -- $cur) )
		;;
	auth)
		COMPREPLY=( $(compgen -W '${auth_types[@]}' -- $cur) )
		;;
	help|version)
		;;
	*)
		local prepre
		if [ $cword -gt 2 ]; then
			prepre=${words[$(($cword - 2))]}
		fi
		case $prepre in
		set)
			COMPREPLY=( $(compgen -W 'apn user password pdp auth' -- $cur) )
			;;
		show)
			COMPREPLY=( $(compgen -W 'apn user password pdp auth all' -- $cur) )
			;;
		-*)
			COMPREPLY=( $(compgen -W '${cmds[@]}' -- $cur) )
			;;
		apn|user|password)
			for w in "${words[@]}"; do
				for i in $(seq 0 ${#opts[@]}); do
					if [ "$w" = "${opts[$i]}" ]; then
						unset opts[$i]
					fi
				done
			done
			COMPREPLY=( $(compgen -W '${opts[@]}' -- $cur) )
			;;
		*)
			;;
		esac
		;;
	esac
} &&

complete -F _4gpi-nm-helper 4gpi-nm-helper
